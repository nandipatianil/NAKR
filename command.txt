
ls = list files
ll
ls -la
ls -ltr
cd 
useradd <username>
passwd useradd
su
df -hT
du -sh *
grep=Global regular expression print
du -sh | grep G
cat /proc/cpuinfo
free -m
lscpu
nproc
ifconfig
ifconfig -a
ip addr
netstat -ntlp
netstat -nulp
netstat -anlp
netstat -ntlp | grep 80
netstat -nulp | grep 123
cp
mv
whoami
w
pwd
mkdir
rm
rm -rf
yum install
yum remove
yum install -y
yum list openssh
yum search openssh
yum info firefox
yum list installed | less == which show installed packages in the system
yum provides /etc/httpd/conf/httpd.conf
yum update
yum grouplist = to install particular package group
yum groupinstall 'MYSQLDAtabase'
yum groupupdate 'Mysqldatabase'
yum groupremove 'Mysqldatabase'
yum repolist
yum repolist all
yum --enablerepo=epel install phpmyadmin
yum clean all
yum history
rpm --checksig pidgin-2.7.9-5.el6.2.i686.rpm == to check sigunature
rpm -ivh pidgin-2.7.9-5.el6.2.i686.rpm = to install rpm
rpm -qpR BitTorrent-5.2.2-1-Python2.4.noarch.rpm = to check dependiencesbefore installlating rpm
rpm -ivh --nodeps BitTorrent-5.2.2-1-Python2.4.noarch.rpm == to isntall with out dependiences 
 rpm -q BitTorrent = to check installed packages
rpm -ql BitTorrent to list all the packages
rpm -qa --last = to list recently installed packages
rpm -qa to list all the packages 
rpm -Uvh nx-3.5.0-2.el6.centos.i686.rpm = to upgrade the exisiting package
 rpm -evv nx to remove package
rpm -ev --nodeps vsftpd to remove the package with out dependencies or forcefully
rpm -qf /usr/bin/htpasswd = query file
rpm -qi vsftpd query information
rpm -qip sqlbuddy-1.3.3-1.noarch.rpm query info package

================

NTP

yum install ntp

To verify the time sync 

ntpq -p

ntpdate -q


Field	Description	Allowed Value
MIN	Minute field	0 to 59
HOUR	Hour field	0 to 23
DOM	Day of Month	1-31
MON	Month field	1-12
DOW	Day Of Week	0-6

30 08 10 06 *

30 – 30th Minute
08 – 08 AM
10 – 10th Day
06 – 6th Month (June)
* – Every day of the week

00 11,16 * * * 

00 – 0th Minute (Top of the hour)
11,16 – 11 AM and 4 PM
* – Every day
* – Every month
* – Every day of the week

00 09-18 * * * 


00 – 0th Minute (Top of the hour)
09-18 – 9 am, 10 am,11 am, 12 am, 1 pm, 2 pm, 3 pm, 4 pm, 5 pm, 6 pm
* – Every day
* – Every month
* – Every day of the week

crontab -e

crontab -l

Keyword	Equivalent
@yearly	0 0 1 1 *
@daily	0 0 * * *
@hourly	0 * * * *
@reboot	Run at startup.

tar and gunzip



users
root = 0 /root  /bin/bash 
system users 1-499 /var/ftp etc /sbin/nologin
normal users 500 - 60000 /home/user /bin/bash

smithj:x:561:561:Joe Smith:/home/smithj:/bin/bash
Each field in a passwd entry is separated with ":" colon characters, and are as follows:

Username, up to 8 characters. Case-sensitive, usually all lowercase

An "x" in the password field. Passwords are stored in the ``/etc/shadow'' file.

Numeric user id. This is assigned by the ``adduser'' script. Unix uses this field, plus the following group field, to identify which files belong to the user.

Numeric group id. Red Hat uses group id's in a fairly unique manner for enhanced file security. Usually the group id will match the user id.

Full name of user. I'm not sure what the maximum length for this field is, but try to keep it reasonable (under 30 characters).

User's home directory. Usually /home/username (eg. /home/smithj). All user's personal files, web pages, mail forwarding, etc. will be stored here.

User's "shell account". Often set to ``/bin/bash'' to provide access to the bash shell (my personal favorite shell).

usermod -l newname oldname

usermod -L newname to lock the user

usermod -U newname  to unlock user

chage -l username

chage -E 2018-1-15 username

userdel -r username

=========================

group administratiom

=========================


groupadd username

usermod -a -G groupname username

Access control list


setfacl -m u:username:rx /ktdir

setfacl -X u:username /opt



tar -czvf name-of-archive.tar.gz /path/to/directory-or-file


-c: Create an archive.
-z: Compress the archive with gzip.
-v: Display progress in the terminal while creating the archive, also known as “verbose” mode. The v is always optional in these commands, but it’s helpful.
-f: Allows you to specify the filename of the archive.

tar -xzvf archive.tar.gz

tar -xzvf archive.tar.gz -C /tmp

#!/usr/bin/python
import argparse
parser = argparse.ArgumentParser()
parser.add_argument('-n','--hostname', help='Description', required=False)
parser.add_argument('-s','--securitygroup', help='Description', required=False)
parser.add_argument('-t','--type', help='Description', required=False)
args = parser.parse_args()
print("The Hostnameof the instance is : %s" % args.hostname)
print("The Securitygroupof the instane is : %s" %args.securitygroup)
print("The Type of the Instance : %s" %args.type)
